import { Box, Center, Image, Input, InputRightElement, Button, InputGroup, InputLeftElement, SimpleGrid, Text, Container, Flex, Tag } from '@chakra-ui/react'
import { Search2Icon, CloseIcon, ArrowLeftIcon, ArrowRightIcon } from '@chakra-ui/icons'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import api from './api/main'

export default function Home() {
  const [data, setData] = useState([])
  const [input, setInput] = useState('')
  const [count, setCount] = useState(0)
  const [page, setPage] = useState(1)

  useEffect(() => {
    api.get(`/character/?page=${page}${input ? '&name=' + input : ''}`)
      .then(response => {
        setData(response.data.results),
          setCount(response.data.info.pages)
      })
      .catch(err => console.log(err))
  }, [page, input])

  const handleSearch = (e) => {
    setInput(e.target.value)
    setPage(1)
  }

  return (
    <div>
      <Head>
        <title>Rick and Morty API</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxW={'1400px'} marginBottom={50}>
        <Center>
          <Box>
            <Image src={'/logo.png'} w={500} />
            <InputGroup size='md'>
              <Input
                pr='4.5rem'
                type={'text'}
                value={input}
                onChange={e => handleSearch(e)}
                placeholder='Find your character'
              />
              <InputLeftElement>
                <Search2Icon />
              </InputLeftElement>
              {input.length > 0 ?
                <InputRightElement>
                  <CloseIcon onClick={e => setInput('')} />
                </InputRightElement>
                : null}
            </InputGroup>
          </Box>
        </Center>
        <Center marginTop={50}>
          <Box>
            <SimpleGrid columns={{ base: 1, xl: 2 }} spacing={{ base: 1, md: 10 }}>
              {data.map(item =>
                <Box key={item.id}>
                  <Flex key={item.id} bg={'#3c3e44'} borderLeft={'8px solid'} borderColor={item.status === 'Alive' ? 'green' : item.status === 'Dead' ? 'red' : null} borderRadius={5} marginBottom={5} h='auto'>
                    <Image src={item.image} w={{ base: 150, md: 250 }} />
                    <Box margin={5} key={item.id}>
                      <Text fontSize={{ base: '2xl', md: '3xl' }} fontWeight={'700'} marginBottom={2}>{item.name}</Text>
                      <Tag
                        marginBottom={2}
                        size={'sm'}
                        borderRadius='full'
                        variant='solid'
                        colorScheme={item.status === 'Alive' ? 'green' : item.status === 'Dead' ? 'red' : null}
                      >{item.status}</Tag>
                      <Text fontSize={{ base: '1xl', md: '2xl' }} ><b>Gender:</b> {item.gender}</Text>
                      <Text fontSize={{ base: '1xl', md: '2xl' }} ><b>Species:</b> {item.species}</Text>
                      <Text fontSize={{ base: '1xl', md: '2xl' }} ><b>Location:</b> {item.location.name}</Text>
                    </Box>
                  </Flex>
                </Box>

              )}
            </SimpleGrid>
          </Box>
        </Center>
        <Box>
          <Text textAlign={'center'} m={5}>Page: {page}</Text>
        </Box>
        <Center>
          <Flex gap={3} color={'black'}>
            <Button onClick={e => setPage(page - 1)} disabled={page === 1 ? true : false}><ArrowLeftIcon /></Button>
            <Button onClick={e => setPage(page + 1)} disabled={page === count ? true : false}><ArrowRightIcon /></Button>
          </Flex>
        </Center>
      </Container>


    </div>
  )
}
