import { Box, Center, Image, Input, InputRightElement, Button, InputGroup, InputLeftElement, SimpleGrid, Text, Container, Flex, Tag, IconButton } from '@chakra-ui/react'
import { Search2Icon, CloseIcon, ArrowLeftIcon, ArrowRightIcon } from '@chakra-ui/icons'
import Head from 'next/head'
import { MdFavoriteBorder, MdFavorite } from 'react-icons/md'
import { useEffect, useState } from 'react'
import api from './api/main'

export default function Home() {
  const [data, setData] = useState([]);
  const [list, setList] = useState([])
  const [input, setInput] = useState('');
  const [count, setCount] = useState(0);
  const [searchAll, setSearchAll] = useState(false);
  const [state, setState] = useState(false)
  const [activeFavorit, setActiveFavorit] = useState(true);
  const [page, setPage] = useState(1);
  const arrayId = [];
  const arrayName = [];

  useEffect(() => {
    api.get(`/character/?page=${page}${input ? '&name=' + input : ''}`)
      .then(response => {
        setData(response.data.results),
          setCount(response.data.info.pages)
      })
      .catch(err => console.log(err))
  }, [page, input, searchAll]);

  useEffect(() => {
    setList(localStorage.getItem('sessionName'))
  }, [arrayName, state])

  const handleJustFavorit = () => {
    api.get(`/character/${localStorage['session']}`)
      .then(response => {
        setData(response.data)
      })
      .catch(err => console.log(err))
  };

  const handleActiveFavorit = () => {
    if (activeFavorit && localStorage['session']) {
      handleJustFavorit()
      setActiveFavorit(false)
    } else {
      setSearchAll(!searchAll)
      setActiveFavorit(true)
    }
  };

  const handleSearch = (e) => {
    setInput(e.target.value)
    setPage(1)
  };

  const handleFavorit = (id, name) => {
    arrayId = JSON.parse(localStorage.getItem('session')) || [];
    arrayName = JSON.parse(localStorage.getItem('sessionName')) || [];
    setState(!state)
    if (arrayId.includes(id)) {
      arrayId.splice(arrayId.indexOf(id), 1)
      arrayName.splice(arrayName.indexOf(name), 1)
      localStorage.setItem('session', JSON.stringify(arrayId));
      localStorage.setItem('sessionName', JSON.stringify(arrayName));
    } else {
      arrayId.push(id)
      arrayName.push(name)
      localStorage.setItem('session', JSON.stringify(arrayId));
      localStorage.setItem('sessionName', JSON.stringify(arrayName));
    }

  };

  return (
    <div>
      <Head>
        <title>Rick and Morty API</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxW={'1400px'} marginBottom={50}>
        <Center>
          <Box>
            <Image src={'/logo.png'} w={500} />
            <Center gap={2}>
              <InputGroup size='md'>
                <Input
                  pr='4.5rem'
                  type={'text'}
                  value={input}
                  onChange={e => handleSearch(e)}
                  placeholder='Find your character'
                />
                <InputLeftElement>
                  <Search2Icon />
                </InputLeftElement>
                {input.length > 0 ?
                  <InputRightElement>
                    <CloseIcon onClick={e => setInput('')} />
                  </InputRightElement>
                  : null}
              </InputGroup>
              <Button color={'black'} onClick={handleActiveFavorit}>Favoritos</Button>
            </Center>
          </Box>
        </Center>
        <Center marginTop={50}>
          <Box>
            {data.length > 0 ?
              <SimpleGrid columns={{ base: 1, xl: 2 }} spacing={{ base: 1, md: 10 }}>
                {data?.map(item =>
                  <Box key={item.id}>
                    <Flex key={item.id} bg={'#3c3e44'} borderLeft={'8px solid'} borderColor={item.status === 'Alive' ? 'green' : item.status === 'Dead' ? 'red' : null} borderRadius={5} marginBottom={5} h='auto'>
                      <Image src={item.image} w={{ base: 150, md: 250 }} />
                      <Box margin={5} key={item.id}>
                        <Text fontSize={{ base: '2xl', md: '3xl' }} fontWeight={'700'} marginBottom={2}>{item.name}</Text>
                        <Tag
                          marginBottom={2}
                          size={'sm'}
                          borderRadius='full'
                          variant='solid'
                          colorScheme={item.status === 'Alive' ? 'green' : item.status === 'Dead' ? 'red' : null}
                        >{item.status}</Tag>
                        <Text fontSize={{ base: '1xl', md: '2xl' }} ><b>Gender:</b> {item.gender}</Text>
                        <Text fontSize={{ base: '1xl', md: '2xl' }} ><b>Species:</b> {item.species}</Text>
                        <Text fontSize={{ base: '1xl', md: '2xl' }} ><b>Location:</b> {item.location.name}</Text>
                      </Box>
                      <Box marginLeft={'auto'} marginRight={5} marginTop={5} onClick={e => handleFavorit(item.id, item.name)}>
                        {list?.includes(item.name) ?
                          <MdFavorite fontSize={'30px'} /> :
                          <MdFavoriteBorder fontSize={'30px'} />
                        }
                      </Box>
                    </Flex>
                  </Box>
                )}
              </SimpleGrid>
              : <SimpleGrid columns={{ base: 1, xl: 2 }} spacing={{ base: 1, md: 10 }}>
                <Box key={data.id}>
                  <Flex key={data.id} bg={'#3c3e44'} borderLeft={'8px solid'} borderColor={data.status === 'Alive' ? 'green' : data.status === 'Dead' ? 'red' : null} borderRadius={5} marginBottom={5} h='auto'>
                    <Image src={data.image} w={{ base: 150, md: 250 }} />
                    <Box margin={5} key={data.id}>
                      <Text fontSize={{ base: '2xl', md: '3xl' }} fontWeight={'700'} marginBottom={2}>{data.name}</Text>
                      <Tag
                        marginBottom={2}
                        size={'sm'}
                        borderRadius='full'
                        variant='solid'
                        colorScheme={data.status === 'Alive' ? 'green' : data.status === 'Dead' ? 'red' : null}
                      >{data.status}</Tag>
                      <Text fontSize={{ base: '1xl', md: '2xl' }} ><b>Gender:</b> {data.gender}</Text>
                      <Text fontSize={{ base: '1xl', md: '2xl' }} ><b>Species:</b> {data.species}</Text>
                      <Text fontSize={{ base: '1xl', md: '2xl' }} ><b>Location:</b> {data.location?.name}</Text>
                    </Box>
                    <Box marginLeft={'auto'} marginRight={5} marginTop={5} onClick={e => handleFavorit(data.id, data.name)}>
                      {list?.includes(data.name) ?
                        <MdFavorite fontSize={'30px'} /> :
                        <MdFavoriteBorder fontSize={'30px'} />
                      }
                    </Box>
                  </Flex>
                </Box>
              </SimpleGrid>}
          </Box>
        </Center>
        <Box>
          <Text textAlign={'center'} m={5}>Page: {page}</Text>
        </Box>
        <Center>
          <Flex gap={3} color={'black'}>
            <Button onClick={e => setPage(page - 1)} disabled={page === 1 ? true : false}><ArrowLeftIcon /></Button>
            <Button onClick={e => setPage(page + 1)} disabled={page === count ? true : false}><ArrowRightIcon /></Button>
          </Flex>
        </Center>
      </Container>


    </div>
  )
}
